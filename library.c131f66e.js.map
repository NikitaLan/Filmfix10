{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,gBACnCC,YAAaF,SAASC,cAAc,0BACpCE,UAAWH,SAASC,cAAc,WAwBpCH,EAAKC,WAAWK,iBAAiB,SAEjC,WACEC,QAAQC,IAAI,wBApBD,CAAAC,IACX,IACE,MAAMC,EAAkBC,aAAaC,QAAQH,GAC7C,OAA2B,OAApBC,OAA2BG,EAAYC,KAAKC,MAAML,E,CACzD,MAAOM,GACPT,QAAQS,MAAM,oBAAqBA,EAAMC,Q,GAgBnBC,CAzBN,WA0BFC,KAAIC,KAdtBC,eAAgCC,GAC9B,MAAMC,QAAaC,MACjB,sCAAcF,6DAIhB,aAFuBC,EAAKE,M,EAW1BC,CAAiBN,GAAIO,MAAKC,IACxBrB,QAAQC,IAAIoB,GACL5B,EAAKI,YAAYyB,mBACtB,aACA,EAAA/B,EAAAgC,0BAAyBF,MAE3B,IAUJ5B,EAAKK,UAAU0B,UAAUC,IAAI,mBAC7BhC,EAAKI,YAAY2B,UAAUE,OAAO,kB,ICnDxB/B,SAASC,cAAc,cACtBD,SAASC,cAAc,0BACvBD,SAASC,cAAc,UCHpC,IAAA+B,EAAAnC,EAAA,S,2BAaa,CACXoC,qBAAsBjC,SAASC,cAAc,0BAC7CiC,gBAAiBlC,SAASC,cAAc,oCACxCkC,SAAUnC,SAASC,cAAc,oCAO9BgC,qBAAqB7B,iBAAiB,SAErBe,eAAkBiB,GACtC,IAAIC,EAAgBD,EAAME,OAAOC,QAAQC,GAwBzC,GAFuBC,GAAP,EAAAC,EAAAC,eAAcN,GAGF,QAA1BD,EAAME,OAAOM,UACa,MAA1BR,EAAME,OAAOM,UACa,OAA1BR,EAAME,OAAOM,UACa,OAA1BR,EAAME,OAAOM,UACa,MAA1BR,EAAME,OAAOM,SAEb,QAGF,EAAAZ,EAAAa,yBACA,EAAAC,EAAAC,eAAcV,GAEdrC,SAASgD,KAAKC,MAAMC,SAAW,Q,IAGjC,IAAIT,EAAgB","sources":["src/js/whatched-list.js","src/js/queue-list.js","src/js/library-modal.js"],"sourcesContent":["import { makeLibraryGalleryMarkUp } from '../js/makeGalleryMarkUpCard';\n\nconst refs = {\n  watchedBtn: document.querySelector('.btn-watched'),\n  watchedList: document.querySelector('.gallery-library__list'),\n  textOoops: document.querySelector('.empty'),\n};\n\nconst STORAGE_KEY = 'watched';\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\nconst API_KEY = '3dd9518c386fd347d5f1ac2580a699a4';\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\nasync function getMovieInfoById(movieID) {\n  const resp = await fetch(\n    `${BASE_URL}${movieID}?api_key=${API_KEY}&language=en-US`\n  );\n  const respData = await resp.json();\n\n  return respData;\n}\n\nrefs.watchedBtn.addEventListener('click', takeListFromStorage);\n\nfunction takeListFromStorage() {\n  console.log('click on btn Watched');\n  const listFromStorage = load(STORAGE_KEY);\n  listFromStorage.map(el => {\n    getMovieInfoById(el).then(data => {\n      console.log(data);\n      return refs.watchedList.insertAdjacentHTML(\n        'beforeend',\n        makeLibraryGalleryMarkUp(data)\n      );\n    });\n  });\n\n  // const listFromStorage = localStorage.getItem(STORAGE_KEY);\n  // watchedList = JSON.parse(listFromStorage);\n  // console.log(watchedList.results);\n  // refs.watchedList.insertAdjacentHTML(\n  //   'afterbegin',\n  //   cardMarkup(watchedList.results)\n  // );\n  refs.textOoops.classList.add('visually-hidden');\n  refs.watchedList.classList.remove('visually-hidden');\n}\n","const refs = {\n  queueBtn: document.querySelector('.btn-queue'),\n  queueList: document.querySelector('.gallery-library__list'),\n  textOoops: document.querySelector('.empty'),\n};\n\nconst STORAGE_KEY = 'queue-list';\nlet queueList = {};\n\n// refs.watchedBtn.addEventListener('click', takeListFromStorage);\n\nfunction takeListFromStorage() {\n  console.log('click on btn Queue');\n  const listFromStorage = localStorage.getItem(STORAGE_KEY);\n  queueList = JSON.parse(listFromStorage);\n  console.log(queueList.results);\n  refs.watchedList.insertAdjacentHTML(\n    'afterbegin',\n    cardMarkup(queueList.results)\n  );\n  refs.textOoops.classList.add('visually-hidden');\n  refs.watchedList.classList.remove('visually-hidden');\n}\n","'use strict';\n\nimport {handleModalOpenClose} from './movie-modal/handle-modal-close';\nimport {fetchPictures} from './movie-modal/fetch-from-API';\nimport {handleApiData} from './movie-modal/handle-API-data';\n\n// import {    //- при импорте ошибка (так как library.js и index.js не связанньі)\n//   createArrayLocalStorage,\n//   loadFromLocalStorage,\n//   removeLocalStorage,\n// } from '/src/js/add-to-watched'; // 💙💛 Koshyk Kostiantyn\n\n\nconst refs = {\n  libraryListOfWatched: document.querySelector('.gallery-library__list'), //<ul> з переглянутими фільмами\n  btnAddToWatched: document.querySelector('.modal-movie__add-to-watched-btn'), // 💙💛 Koshyk Kostiantyn\n  btnQueue: document.querySelector('.modal-movie__add-to-queue-btn'), // 💙💛 Koshyk Kostiantyn\n};\n\n\n// removeLocalStorage('watched'); // 💙💛 Koshyk Kostiantyn\n// removeLocalStorage('queue'); // 💙💛 Koshyk Kostiantyn\n\nrefs.libraryListOfWatched.addEventListener('click', handleWatchedMoviesClick); //<ul> з переглянутими фільмами\n\nasync function handleWatchedMoviesClick(event) { // в результаті кліку на будь-яку картку фільму:\n  let pickedMovieId = event.target.dataset.id;\n\n//   createArrayLocalStorage('watched'); // 💙💛 Koshyk Kostiantyn\n//   createArrayLocalStorage('queue'); // 💙💛 Koshyk Kostiantyn\n\n//   renameBtn(\n//     refs.btnAddToWatched,\n//     'watched',\n//     'Add to watched',\n//     'Remove from watched',\n//     pickedMovieId\n//   ); // 💙💛 Koshyk Kostiantyn\n\n//   renameBtn(\n//     refs.btnQueue,\n//     'queue',\n//     'Add to queue',\n//     'Remove from queue',\n//     pickedMovieId\n//   ); // 💙💛 Koshyk Kostiantyn\n\n  // 💙💛 Koshyk Kostiantyn (для использования в add-to-watched.js)\n  dataModalFilm = fetchPictures(pickedMovieId);\n\n  if (\n    event.target.nodeName !== 'IMG' &&\n    event.target.nodeName !== 'P' &&\n    event.target.nodeName !== 'H2' &&\n    event.target.nodeName !== 'H3' &&\n    event.target.nodeName !== 'B'\n  ) {\n    return;\n  }\n\n  handleModalOpenClose();\n  handleApiData(pickedMovieId);\n\n  document.body.style.overflow = 'hidden'; //щоб body не скролився при відкритій модалці\n}\n\nlet dataModalFilm = {}; // для использования в add-to-watched.js\n\n\n\n// // 💙💛 Koshyk Kostiantyn функция изменяет название кнопки\n// function renameBtn(btn, key, nameA, nameB, id) {\n//     if (!loadFromLocalStorage(key).includes(Number(id))) {\n//       btn.textContent = nameA;\n//       btn.classList.remove('active-btn');\n//     } else {\n//       btn.textContent = nameB;\n//       btn.classList.add('active-btn');\n//     }\n//   }\n  \n  // 💙💛 Koshyk Kostiantyn (для использования в add-to-watched.js)\n  export { dataModalFilm, refs };\n\n  "],"names":["$ih2xg","parcelRequire","$1c5b06acbec3a93f$var$refs","watchedBtn","document","querySelector","watchedList","textOoops","addEventListener","console","log","key","serializedState","localStorage","getItem","undefined","JSON","parse","error","message","$1c5b06acbec3a93f$var$load","map","el","async","movieID","resp","fetch","json","$1c5b06acbec3a93f$var$getMovieInfoById","then","data","insertAdjacentHTML","makeLibraryGalleryMarkUp","classList","add","remove","$fb0WN","libraryListOfWatched","btnAddToWatched","btnQueue","event","pickedMovieId","target","dataset","id","$da48e4bca1361a11$export$6b835bbd1a63858e","$3hqqe","fetchPictures","nodeName","handleModalOpenClose","$fYdb4","handleApiData","body","style","overflow"],"version":3,"file":"library.c131f66e.js.map"}